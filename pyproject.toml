[build-system]
requires = ["flit_core >=3.5,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "tlslib"
dynamic = ["version"]
description = "An example MVP for the updated PEP 543 proposal"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Trail of Bits", email = "opensource@trailofbits.com" }]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
]
dependencies = ["truststore"]
requires-python = ">=3.8"

[project.optional-dependencies]
doc = []
test = ["pytest", "pytest-cov", "pretend", "coverage[toml]"]
lint = [
    "ruff",
    "mypy >= 1.0",
    "types-html5lib",
    "types-requests",
    "types-toml",
    "interrogate",
]
dev = ["tlslib[doc,test,lint]", "twine", "wheel", "build"]

[project.urls]
Homepage = "https://pypi.org/project/tlslib"
Documentation = "https://trailofbits.github.io/tlslib/"
Issues = "https://github.com/trailofbits/tlslib/issues"
Source = "https://github.com/trailofbits/tlslib"

[tool.flit.module]
name = "tlslib"

[tool.coverage.run]
# don't attempt code coverage for the CLI entrypoints
omit = ["src/tlslib/_cli.py"]

[tool.mypy]
mypy_path = "src"
packages = "tlslib"
allow_redefinition = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
sqlite_cache = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN101", # no need for explicit self typing
    "COM812", # conflicts with `ruff format`
    "D212",   # conflicts with D213, which we prefer
    "ISC001", # conflicts with `ruff format`
]

[tool.ruff.lint.per-file-ignores]
"test/**/*.py" = [
    "D",    # no docstrings in tests
    "S101", # asserts are expected in tests
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.interrogate]
# don't enforce documentation coverage for packaging, testing, the virtual
# environment, or the CLI (which is documented separately).
exclude = ["env", "test", "src/tlslib/_cli.py"]
ignore-semiprivate = true
fail-under = 100
